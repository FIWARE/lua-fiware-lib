name: Pre-Release

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:

  test:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker run --rm -v $PWD:/fiware openresty/openresty:1.19.9.1-10-alpine-fat /bin/bash -c 'cd /fiware && ./run_tests.sh'

  generate-version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - id: bump
        uses: zwaldowski/match-label-action@v1
        with:
          allowed: major,minor,patch

      - uses: zwaldowski/semver-release-action@v2
        with:
          dry_run: true
          bump: ${{ steps.bump.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Number
        id: pr_number
        run: echo "::set-output name=nr::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"

      - name: Set version output
        id: out
        run: echo "::set-output name=version::$(echo ${VERSION}-PRE-${{ steps.pr_number.outputs.nr }})"

  git-release:
    needs: ["generate-version"]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ needs.generate-version.outputs.version }}
          prerelease: true
          title: ${{ needs.generate-version.outputs.version }}

  lua-fiware-lib:

    needs: [ "git-release", "generate-version" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Prepare values
        run: | 
          echo GITHUB_ORGANISATION: fiware >> values.yaml
          echo GITHUB_REPO: lua-fiware-libware >> values.yaml
          echo VERSION: ${{ needs.generate-version.outputs.version }} >> values.yaml

      - name: Parse rockspec
        run: |
          go install github.com/cbroglie/mustache/cmd/mustache@v1.3.1
          ~/go/bin/mustache values.yaml rockspec.mustache > lua-fiware-lib-${{ needs.generate-version.outputs.version }}.rockspec
      
      - uses: leafo/gh-actions-lua@v9
      - uses: leafo/gh-actions-luarocks@v4

      - name: Upload rockspec
        run: luarocks upload --api-key=${{ secrets.API_KEY }} lua-fiware-lib-${{ needs.generate-version.outputs.version }}.rockspec

